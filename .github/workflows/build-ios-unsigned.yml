name: Build Unsigned IPA for AltStore

on:
  workflow_dispatch: # Manually trigger builds
  push:
    branches: [ master ]
    tags:
      - "v*.*.*" # Trigger on version tags

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.2"
          channel: 'stable'
          cache: true

      - name: Setup Firebase Configuration
        run: |
          echo "${{ secrets.FIREBASE_JSON_CONFIG }}" > android/app/google-services.json
          echo "${{ secrets.IOS_FIREBASE_CONFIG }}" > ios/Runner/GoogleService-Info.plist
          echo "${{ secrets.FIREBASE_OPTIONS_DART }}" > lib/firebase_options.dart

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update
          cd ..

      - name: Build Flutter framework and assets
        run: |
          flutter build ios-framework --release --no-codesign
          flutter build ios --release --no-codesign --config-only
        continue-on-error: true

      - name: Build iOS app with xcodebuild (no signing)
        run: |
          cd ios
          xcodebuild \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath $PWD/build/Runner.xcarchive \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            AD_HOC_CODE_SIGNING_ALLOWED=NO \
            clean archive
          cd ..

      - name: Create IPA from archive
        run: |
          # Get version info first
          VERSION=$(grep "version:" pubspec.yaml | sed 's/version: //g' | sed 's/+.*//g')
          BUILD=$(grep "version:" pubspec.yaml | sed 's/.*+//g')
          echo "Built version: $VERSION ($BUILD)"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BUILD=$BUILD" >> $GITHUB_ENV
          
          # Create Payload directory
          mkdir -p Payload
          
          # Copy the built .app bundle from archive
          cp -r ios/build/Runner.xcarchive/Products/Applications/Runner.app Payload/
          
          # Create IPA (which is just a zip file with .ipa extension)
          zip -r qBitConnect-unsigned.ipa Payload
          
          # Cleanup
          rm -rf Payload

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: qBitConnect-Unsigned-IPA-${{ env.VERSION }}
          path: qBitConnect-unsigned.ipa
          retention-days: 30

      - name: Create Release (if tagged)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: qBitConnect-unsigned.ipa
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
