name: Build iOS - Minimal Approach

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.2"
          channel: 'stable'
          cache: true

      - name: Setup Firebase Configuration
        run: |
          echo "${{ secrets.FIREBASE_JSON_CONFIG }}" > android/app/google-services.json
          echo "${{ secrets.IOS_FIREBASE_CONFIG }}" > ios/Runner/GoogleService-Info.plist
          echo "${{ secrets.FIREBASE_OPTIONS_DART }}" > lib/firebase_options.dart

      - name: Get dependencies
        run: flutter pub get

      - name: Build Flutter web (as backup)
        run: |
          flutter build web --release
          echo "✅ Web build completed as fallback"

      - name: Try iOS simulator build
        run: |
          # Clean previous builds
          flutter clean
          flutter pub get
          
          # Try building for simulator
          flutter build ios --simulator --release --no-tree-shake-icons || {
            echo "❌ iOS build failed, but we have web build as backup"
            exit 1
          }
          
          # Get version info
          VERSION=$(grep "version:" pubspec.yaml | sed 's/version: //g' | sed 's/+.*//g')
          BUILD=$(grep "version:" pubspec.yaml | sed 's/.*+//g')
          echo "Built version: $VERSION ($BUILD)"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BUILD=$BUILD" >> $GITHUB_ENV

      - name: Create IPA from simulator build
        if: success()
        run: |
          # Create Payload directory
          mkdir -p Payload
          
          # Copy simulator build
          cp -r build/ios/iphonesimulator/Runner.app Payload/
          
          # Create IPA
          zip -r qBitConnect-${{ env.VERSION }}-simulator.ipa Payload
          
          # Cleanup
          rm -rf Payload

      - name: Upload IPA (if iOS build succeeded)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: qBitConnect-iOS-${{ env.VERSION }}
          path: qBitConnect-${{ env.VERSION }}-simulator.ipa
          retention-days: 30

      - name: Upload Web Build (if iOS failed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: qBitConnect-Web-Backup
          path: build/web/
          retention-days: 30
